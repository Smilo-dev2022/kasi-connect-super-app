name: Release

on:
  release:
    types: [published]

permissions:
  contents: write
  packages: write

jobs:
  build-node:
    name: Build Node artifacts
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: root
            path: .
          - project: backend
            path: backend
          - project: web-admin
            path: web-admin
          - project: agent7-messaging
            path: agent7-messaging
          - project: agent9-search
            path: agent9-search
          - project: media-service
            path: services/media
          - project: events-service
            path: events-service
    defaults:
      run:
        working-directory: ${{ matrix.path }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: ${{ format('{0}/package-lock.json', matrix.path) }}
      - name: Install
        run: if [ -f package-lock.json ]; then npm ci --no-fund --no-audit; else npm install --no-fund --no-audit; fi
      - name: Build
        run: npm run build --if-present
      - name: Package artifact
        env:
          NAME: ${{ matrix.project }}
          WORKSPACE: ${{ github.workspace }}
        run: |
          set -e
          mkdir -p "$WORKSPACE/artifacts"
          if [ -d dist ]; then tar -czf "$WORKSPACE/artifacts/${NAME}-dist.tgz" dist; fi
          if [ -d .next ]; then tar -czf "$WORKSPACE/artifacts/${NAME}-next.tgz" .next; fi
      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.project }}-artifact
          path: artifacts/*.tgz
          if-no-files-found: ignore

  docker:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    needs: build-node
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: agent9-search
            context: agent9-search
            file: agent9-search/Dockerfile
          - name: media-service
            context: services/media
            file: services/media/Dockerfile
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:${{ github.ref_name }},ghcr.io/${{ github.repository_owner }}/${{ matrix.name }}:latest

  attach:
    name: Attach artifacts to release
    runs-on: ubuntu-latest
    needs: [build-node, docker]
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*.tgz

