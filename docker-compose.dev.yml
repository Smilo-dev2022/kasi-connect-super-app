version: '3.9'

services:
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data

  minio:
    image: quay.io/minio/minio:latest
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --address :9000 --console-address :9001
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data

  typesense:
    image: typesense/typesense:0.25.2
    command: ["/opt/typesense-server","--data-dir","/data","--api-key","xyz","--listen-port","8108","--enable-cors"]
    ports:
      - '8108:8108'
    volumes:
      - typesense-data:/data

  agent7-messaging:
    image: node:20-alpine
    working_dir: /app
    environment:
      - NODE_ENV=development
      - PORT=8080
      - JWT_SECRET=devsecret
    volumes:
      - ./agent7-messaging:/app
      - /app/node_modules
    command: sh -c "npm i && npm run dev"
    ports:
      - '8080:8080'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  auth:
    build:
      context: ./services/auth
    environment:
      - NODE_ENV=development
      - PORT=4010
      - CORS_ORIGIN=*
      - JWT_SECRET=dev-secret-change-me
      - REDIS_URL=redis://redis:6379
      - OTP_TTL_SECONDS=300
      - OTP_COOLDOWN_SECONDS=60
      - OTP_MAX_ATTEMPTS=5
      - OTP_PEPPER=dev-otp-pepper-change-me
    depends_on:
      - redis
    ports:
      - '4010:4010'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4010/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  media:
    build:
      context: ./services/media
      target: dev
    environment:
      - NODE_ENV=development
      - PORT=4008
      - CORS_ORIGIN=*
      - S3_ENDPOINT=http://minio:9000
      - S3_REGION=us-east-1
      - S3_ACCESS_KEY_ID=minioadmin
      - S3_SECRET_ACCESS_KEY=minioadmin
      - S3_BUCKET=media
      - S3_FORCE_PATH_STYLE=true
    volumes:
      - ./services/media:/app
      - /app/node_modules
    depends_on:
      - minio
    ports:
      - '4008:4008'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4008/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  search:
    build:
      context: ./agent9-search
    environment:
      - NODE_ENV=development
      - PORT=4009
      - TYPESENSE_HOST=typesense
      - TYPESENSE_PORT=8108
      - TYPESENSE_PROTOCOL=http
      - TYPESENSE_API_KEY=xyz
    depends_on:
      - typesense
    ports:
      - '4009:4009'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4009/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  events:
    image: python:3.13-slim
    working_dir: /app
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./:/app
    command: bash -lc "pip install -U pip wheel setuptools && pip install -r requirements.txt && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    ports:
      - '8000:8000'
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/docs')"]
      interval: 30s
      timeout: 10s
      retries: 3

  moderation:
    image: python:3.11-slim
    working_dir: /app
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./moderation_service:/app
    command: bash -lc "pip install -U pip wheel setuptools && pip install -r requirements.txt && uvicorn app.main:app --host 0.0.0.0 --port 8082 --reload"
    ports:
      - '8082:8082'
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8082/docs')"]
      interval: 30s
      timeout: 10s
      retries: 3

  web:
    image: node:20-alpine
    working_dir: /app
    environment:
      - NODE_ENV=development
      - VITE_MSG_API=http://localhost:8080
    volumes:
      - ./:/app
      - /app/node_modules
    command: sh -c "npm i && npm run dev -- --host 0.0.0.0"
    depends_on:
      - agent7-messaging
    ports:
      - '5173:5173'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data: {}
  minio-data: {}
  typesense-data: {}
