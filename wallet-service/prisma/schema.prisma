// datasource and generator
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id        String        @id @default(cuid())
  userId    String
  balance   Float         @default(0)
  currency  String        @default("USD")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  
  transactions Transaction[]
  kyc          KYC?

  @@index([userId])
}

model Transaction {
  id           String   @id @default(cuid())
  accountId    String
  amount       Float
  type         TransactionType
  description  String?
  balanceAfter Float
  createdAt    DateTime @default(now())
  partnerRef   String?
  partnerPayload Json?

  account Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

enum TransactionType {
  CREDIT
  DEBIT
}

model KYC {
  id        String     @id @default(cuid())
  accountId String     @unique
  account   Account    @relation(fields: [accountId], references: [id])
  status    KYCStatus  @default(PENDING)
  details   Json?      // Encrypted PII
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum KYCStatus {
  PENDING
  APPROVED
  REJECTED
}
